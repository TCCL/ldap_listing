<?php

/**
 * ldap_listing.module
 *
 * ldap_listing
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\ldap_listing\DirectoryQuery;
use Drupal\ldap_listing\Form\SettingsForm;

/**
 * Implements hook_help().
 */
function ldap_listing_help($route_name,RouteMatchInterface $route_match) {
  switch ($route_name) {
  case 'help.page.ldap_listing':
    return '
      <h2>LDAP Directory</h2>
      <p>This module generates a directory listing page for entities queried from an LDAP server.</p>
      ';
  }
}

/**
 * Implements hook_theme().
 */
function ldap_listing_theme($existing,$type,$theme,$path) {
  return [
    'ldap_listing_directory_listing' => [
      'variables' => [
        'index' => null,
      ],
    ],
    'ldap_listing_directory_listing_field' => [
      'variables' => [
        'section' => null,
      ],
    ],
    'user__ldap_listing' => [
      'base hook' => 'user',
      'variables' => [
        'ldapFields' => [],
      ],
    ],
    'ldap_listing_field' => [
      'variables' => [
        'label' => 'LDAP Field',
        'value' => 'n/a',
        'field_name' => '',
        'attributes' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_cron().
 */
function ldap_listing_cron() {
  DirectoryQuery::invalidateIfElapsed();
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function ldap_listing_theme_suggestions_user(array $variables) {
  $suggestions = [];

  // Apply ldap_listing suggestion to user template if configured and if path is
  // user profile page.
  $request = \Drupal::routeMatch()->getRouteObject();
  $pathParts = array_values(array_filter(explode('/',$request->getPath())));
  $config = \Drupal::config(SettingsForm::CONFIG_OBJECT);
  if ($config->get('link_to_user_page')
      && $pathParts[0] == 'user'
      && $pathParts[1] == '{user}')
  {
    $suggestions[] = 'user__ldap_listing';
  }

  return $suggestions;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function ldap_listing_preprocess_user__ldap_listing(array &$variables) {
  $userQuery = \Drupal::service('ldap_listing.user');

  try {
    $extraFields = $userQuery->query($variables['user']);

    foreach ($extraFields as $name => $fieldData) {
      if (array_key_exists($name,$variables['content'])) {
        continue;
      }
      if (empty($fieldData['value'])) {
        continue;
      }

      $variables['ldapFields'][$name] = [
        '#theme' => 'ldap_listing_field',
        '#label' => $fieldData['label'],
        '#value' => $fieldData['value'],
        '#attributes' => [
          'class' => [
            'ldap-listing-attribute-field',
            'ldap-listing-user',
            "ldap-attribute-$name",
          ],
        ],
        '#field_name' => $name,
        '#attached' => [
          'library' => ['ldap_listing/attribute-field'],
        ],
      ];
    }

    $variables['#cache']['tags'][] = DirectoryQuery::CACHE_TAG;

  } catch (\Drupal\ldap_listing\Exception $ex) {
    error_log($ex->getMessage());
  }
}

/**
 * Local Variables:
 * mode:php
 * End:
 */
